<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Advanced C&#43;&#43; Seminar Notebook</title>
    <link>https://acppsn.netlify.app/post/</link>
    <description>Recent content in Posts on Advanced C&#43;&#43; Seminar Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; CC0-1.0 License</copyright>
    <lastBuildDate>Sat, 13 Mar 2021 11:56:19 +0800</lastBuildDate><atom:link href="https://acppsn.netlify.app/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>专题1：Exception</title>
      <link>https://acppsn.netlify.app/post/exception/</link>
      <pubDate>Sat, 13 Mar 2021 11:56:19 +0800</pubDate>
      
      <guid>https://acppsn.netlify.app/post/exception/</guid>
      <description>前言  C++ Exception实现机制 作者：NeilKleistGao
 环境申明  操作系统: Windows10 IDE: Visual Studio 2019 编译器：MSVC 19 C++标准：C++17 优化选项：无优化  std::exception实现 MSVC下std::exception的实现在头文件vcruntime_exception.h中：
class exception { public: exception() noexcept : _Data() { } explicit exception(char const* const _Message) noexcept : _Data() { __std_exception_data _InitData = { _Message, true }; __std_exception_copy(&amp;amp;_InitData, &amp;amp;_Data); } exception(char const* const _Message, int) noexcept : _Data() { _Data._What = _Message; } exception(exception const&amp;amp; _Other) noexcept : _Data() { __std_exception_copy(&amp;amp;_Other.</description>
    </item>
    
  </channel>
</rss>
